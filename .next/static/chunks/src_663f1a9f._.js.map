{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Progress } from '@/components/ui/progress'\nimport { Input } from '@/components/ui/input'\nimport { X, Check, User } from 'lucide-react'\n\ninterface Question {\n  id: string\n  term: string\n  question: string\n  options: string[]\n  correctAnswer: number\n  shuffledOptions: string[]\n  shuffledCorrectAnswer: number\n}\n\n// Función para mezclar array\nconst shuffleArray = <T,>(array: T[]): T[] => {\n  const shuffled = [...array]\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]]\n  }\n  return shuffled\n}\n\nconst baseQuestions = [\n  {\n    id: 'DM',\n    term: 'DM',\n    question: 'DM (DeathMatch) es:',\n    options: [\n      'DM significa Dame Medicina, es cuando te curás sin rol.',\n      'DM es Duro de Matar, cuando aguantás muchos tiros sin morir.',\n      'DM (DeathMatch) es matar o herir a otro jugador sin motivo ni rol previo.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'MG',\n    term: 'MG',\n    question: 'MG (MetaGaming) es:',\n    options: [\n      'MG es Modo Gamer, cuando jugás en serio y sin distracciones.',\n      'MG es Mucho Golpe, cuando atacás con combos seguidos.',\n      'MG (MetaGaming) es usar información externa (Discord, streams, etc.) como si tu personaje la supiera.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'PG',\n    term: 'PG',\n    question: 'PG (PowerGaming) es:',\n    options: [\n      'PG es Pagar Ganancias, cuando transferís dinero entre cuentas IC.',\n      'PG significa Pura Guerra, cuando usás armas todo el tiempo.',\n      'PG (PowerGaming) es forzar el rol o hacer cosas imposibles, sin dar opciones al otro jugador.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'BD',\n    term: 'BD',\n    question: 'BD (Bad Driving) es:',\n    options: [\n      'BD es Buena Dirección, cuando manejás bien en el rol.',\n      'BD significa Barridas Delictivas, cuando atropellás gente a propósito.',\n      'BD (Bad Driving) es conducir de forma irreal, como por veredas, a toda velocidad o sin respetar el entorno.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'FP',\n    term: 'FP',\n    question: 'FP (FearPlay) es:',\n    options: [\n      'FP significa Fuerza Policial, cuando estás con la policía en rol.',\n      'FP es Furia Pura, cuando no tenés miedo a nada y te enfrentás igual.',\n      'FP (FearPlay) es interpretar el miedo de tu personaje ante una amenaza como si fuera real.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'PK',\n    term: 'PK',\n    question: 'PK (Player Kill) es:',\n    options: [\n      'PK es Paseo Klandestino, cuando te llevan en un rol sin permiso.',\n      'PK es cuando matás a alguien y su cuenta queda baneada.',\n      'PK (Player Kill) es cuando un personaje muere y olvida lo sucedido en ese rol, incluyendo a los involucrados.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'RK',\n    term: 'RK',\n    question: 'RK (Revenge Kill) es:',\n    options: [\n      'RK es Robo Kallejero, cuando te asaltan sin rol.',\n      'RK significa Reventar Kabezas, cuando usás headshot todo el tiempo.',\n      'RK (Revenge Kill) es buscar venganza y matar a alguien luego de haber muerto en rol, sin respetar el PK.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'CJ',\n    term: 'CJ',\n    question: 'CJ (Car Jacking) es:',\n    options: [\n      'CJ es el personaje de GTA San Andreas.',\n      'CJ significa Corre Joven, cuando escapás de la policía.',\n      'CJ (Car Jacking) es robar un vehículo roleando adecuadamente con /me, /do, arma, ganzúa, etc.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'BJ',\n    term: 'BJ',\n    question: 'BJ (Bank Juggling) es:',\n    options: [\n      'BJ es Bicicleta Jet, cuando usás vehículos voladores sin rol.',\n      'BJ significa Banquito Jodido, cuando explotás el banco con bugs.',\n      'BJ (Bank Juggling) es un robo al banco sin respetar normas de entorno, sin policías conectados o sin rol adecuado.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'PKT',\n    term: 'PKT',\n    question: 'PKT (Player Kill Total) es:',\n    options: [\n      'PKT es Paquete Kill Total, cuando le das un combo a alguien y lo matás.',\n      'PKT significa PakarTodo, cuando perdés todas tus cosas tras un robo.',\n      'PKT (Player Kill Total) es una eliminación total del personaje, similar a un CK, aunque actualmente no está habilitado.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'CK',\n    term: 'CK',\n    question: 'CK (Character Kill) es:',\n    options: [\n      'CK es Callejero Kill, cuando te matan en la calle.',\n      'CK significa Cambio de Casa, cuando roleás mudarte a otra zona.',\n      'CK (Character Kill) es la muerte definitiva de tu personaje, con pérdida de memoria, propiedades y todo lo relacionado a ese personaje.'\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: 'RDE',\n    term: 'RDE',\n    question: 'RDE (Romper Entorno) es:',\n    options: [\n      'RDE es Reírse De Enemigos, cuando no tomás en serio un rol.',\n      'RDE significa Rápido Despliegue Especial, cuando usás comandos de staff.',\n      'RDE (Romper Entorno) es ignorar el entorno del rol: por ejemplo, no actuar con miedo ante armas, o hacer acciones sin lógica en lugares públicos.'\n    ],\n    correctAnswer: 2\n  }\n]\n\nconst WEBHOOK_URL = 'https://discord.com/api/webhooks/1322978868457639978/Kxsnv0aDoZPJ1eI0tOEq2mJ7HZ1k7AI48bFtb18y0nJGJodsy60vPOFkN5zc1GetvYj7'\n\n// Función para validar Discord ID (debe ser un número de 17-19 dígitos)\nconst isValidDiscordId = (id: string): boolean => {\n  const discordIdRegex = /^\\d{17,19}$/\n  return discordIdRegex.test(id.trim())\n}\n\n// Función para enviar resultados al webhook\nconst sendToWebhook = async (discordId: string, score: number, totalQuestions: number, passed: boolean) => {\n  try {\n    const percentage = Math.round((score / totalQuestions) * 100)\n    const status = passed ? '✅ APROBADO' : '❌ REPROBADO'\n    const color = passed ? 0x00ff00 : 0xff0000\n    \n    const embed = {\n      title: '📋 Resultado de Postulación - IBIZA RP',\n      color: color,\n      fields: [\n        {\n          name: '👤 Discord ID',\n          value: `<@${discordId}>`,\n          inline: true\n        },\n        {\n          name: '📊 Puntuación',\n          value: `${score}/${totalQuestions} (${percentage}%)`,\n          inline: true\n        },\n        {\n          name: '🎯 Estado',\n          value: status,\n          inline: true\n        }\n      ],\n      timestamp: new Date().toISOString(),\n      footer: {\n        text: 'Sistema de Postulación IBIZA RP'\n      }\n    }\n\n    await fetch(WEBHOOK_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        embeds: [embed]\n      })\n    })\n  } catch (error) {\n    console.error('Error enviando al webhook:', error)\n  }\n}\n\nexport default function Home() {\n  const [questions, setQuestions] = useState<Question[]>([])\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [selectedAnswers, setSelectedAnswers] = useState<{ [key: number]: number }>({})\n  const [showResults, setShowResults] = useState(false)\n  const [isCompleted, setIsCompleted] = useState(false)\n  const [showFeedback, setShowFeedback] = useState(false)\n  const [lastAnswerCorrect, setLastAnswerCorrect] = useState(false)\n  \n  // Estados para el sistema de login\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [discordId, setDiscordId] = useState('')\n  const [loginError, setLoginError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Inicializar preguntas con opciones mezcladas\n  useEffect(() => {\n    const shuffledQuestions = baseQuestions.map(question => {\n      const correctOption = question.options[question.correctAnswer]\n      const shuffledOptions = shuffleArray(question.options)\n      const shuffledCorrectAnswer = shuffledOptions.indexOf(correctOption)\n      \n      return {\n        ...question,\n        shuffledOptions,\n        shuffledCorrectAnswer\n      }\n    })\n    setQuestions(shuffledQuestions)\n  }, [])\n\n  // Función para manejar el login\n  const handleLogin = async () => {\n    setLoginError('')\n    \n    if (!discordId.trim()) {\n      setLoginError('Por favor ingresa tu Discord ID')\n      return\n    }\n    \n    if (!isValidDiscordId(discordId)) {\n      setLoginError('Discord ID inválido. Debe ser un número de 17-19 dígitos.')\n      return\n    }\n    \n    setIsLoading(true)\n    \n    // Simular validación (aquí podrías agregar validación adicional si es necesario)\n    setTimeout(() => {\n      setIsLoggedIn(true)\n      setIsLoading(false)\n    }, 1000)\n  }\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [currentQuestion]: answerIndex\n    }))\n  }\n\n  const handleNext = () => {\n    // Mostrar feedback de la respuesta actual\n    const currentAnswer = selectedAnswers[currentQuestion]\n    const isCorrect = currentAnswer === questions[currentQuestion].shuffledCorrectAnswer\n    setLastAnswerCorrect(isCorrect)\n    setShowFeedback(true)\n    \n    // Después de 2 segundos, continuar a la siguiente pregunta o mostrar resultados\n    setTimeout(async () => {\n      setShowFeedback(false)\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1)\n      } else {\n        setIsCompleted(true)\n        setShowResults(true)\n        \n        // Enviar resultados al webhook\n        const score = calculateScore()\n        const passed = score >= Math.ceil(questions.length * 0.7) // 70% para aprobar\n        await sendToWebhook(discordId, score, questions.length, passed)\n      }\n    }, 2000)\n  }\n\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1)\n    }\n  }\n\n  const calculateScore = () => {\n    let correct = 0\n    questions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.shuffledCorrectAnswer) {\n        correct++\n      }\n    })\n    return correct\n  }\n\n  // Si las preguntas aún no se han cargado, mostrar loading\n  if (questions.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-2xl bg-white shadow-xl animate-in zoom-in duration-700\">\n          <CardContent className=\"p-8 text-center\">\n            <h1 className=\"text-4xl font-bold text-black mb-8 animate-in fade-in duration-500\">IBIZA RP</h1>\n            <div className=\"animate-in fade-in duration-400 delay-300\">\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-black mb-4\"></div>\n              <p className=\"text-gray-600 animate-in fade-in duration-300 delay-400\">Cargando preguntas...</p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  const currentQ = questions[currentQuestion]\n  const progress = ((currentQuestion + 1) / questions.length) * 100\n\n  if (showResults) {\n    const score = calculateScore()\n    const percentage = Math.round((score / questions.length) * 100)\n    \n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-2xl bg-white shadow-xl animate-in zoom-in duration-700\">\n          <CardContent className=\"p-8 text-center\">\n            <h1 className=\"text-4xl font-bold text-black mb-8 animate-in fade-in duration-500\">IBIZA RP</h1>\n            <div className=\"mb-8 animate-in fade-in duration-600 delay-200\">\n              <h2 className=\"text-2xl font-semibold text-black mb-4 animate-in fade-in duration-400 delay-300\">¡Postulación Completada!</h2>\n              <div className=\"text-6xl font-bold text-black mb-4 animate-in fade-in duration-500 delay-400\">\n                {score}/{questions.length}\n              </div>\n              <div className=\"text-xl text-gray-600 animate-in fade-in duration-400 delay-500\">\n                Puntuación: {percentage}%\n              </div>\n            </div>\n            \n            <div className=\"space-y-4 text-left\">\n              {questions.map((question, index) => {\n                const userAnswer = selectedAnswers[index]\n                const isCorrect = userAnswer === question.shuffledCorrectAnswer\n                \n                return (\n                  <div \n                    key={question.id} \n                    className=\"border rounded-lg p-4 transition-all duration-300 hover:shadow-md animate-in fade-in duration-300\"\n                    style={{ animationDelay: `${600 + index * 50}ms` }}\n                  >\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <span className=\"bg-red-500 text-white px-2 py-1 rounded text-sm font-semibold transition-all duration-300 hover:scale-105\">\n                        {question.term}\n                      </span>\n                      {isCorrect ? (\n                        <Check className=\"w-5 h-5 text-green-500 animate-in zoom-in duration-300\" />\n                      ) : (\n                        <X className=\"w-5 h-5 text-red-500 animate-in zoom-in duration-300\" />\n                      )}\n                    </div>\n                    <p className=\"font-medium text-black mb-2 transition-all duration-200\">{question.question}</p>\n                    <p className=\"text-sm text-gray-600 transition-all duration-200\">\n                      Tu respuesta: {question.shuffledOptions[userAnswer]}\n                    </p>\n                    {!isCorrect && (\n                      <p className=\"text-sm text-green-600 mt-1 animate-in slide-in-from-left duration-300 delay-100\">\n                        Respuesta correcta: {question.shuffledOptions[question.shuffledCorrectAnswer]}\n                      </p>\n                    )}\n                  </div>\n                )\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-2xl bg-white shadow-xl animate-in zoom-in duration-700\">\n        <CardContent className=\"p-8\">\n          {/* Header */}\n          <div className=\"text-center mb-8 animate-in fade-in duration-500\">\n            <h1 className=\"text-4xl font-bold text-black mb-4 animate-in fade-in duration-700 delay-100\">IBIZA RP</h1>\n            <div className=\"w-32 h-16 mx-auto mb-6 flex items-center justify-center animate-in fade-in duration-500 delay-200\">\n              <img \n                src=\"/ibiza-logo.png\" \n                alt=\"IBIZA RP Logo\" \n                className=\"w-24 h-12 object-contain transition-all duration-300 hover:scale-110\"\n                onError={(e) => {\n                  // Fallback si la imagen no carga\n                  e.currentTarget.style.display = 'none'\n                  const fallback = e.currentTarget.nextElementSibling as HTMLElement\n                  if (fallback) fallback.style.display = 'flex'\n                }}\n              />\n              <div className=\"w-24 h-12 bg-gray-300 rounded-full hidden items-center justify-center\">\n                <div className=\"w-16 h-8 bg-white rounded-full opacity-50\"></div>\n              </div>\n            </div>\n          </div>\n\n          {/* Feedback Message */}\n          {showFeedback && (\n            <div className=\"mb-8 text-center animate-in slide-in-from-bottom duration-500\">\n              <div className={`p-6 rounded-lg transform transition-all duration-500 ${lastAnswerCorrect ? 'bg-green-100 border-2 border-green-500' : 'bg-red-100 border-2 border-red-500'}`}>\n                <div className=\"flex items-center justify-center gap-3 mb-2\">\n                  {lastAnswerCorrect ? (\n                    <Check className=\"w-8 h-8 text-green-600 animate-in zoom-in duration-300 delay-100\" />\n                  ) : (\n                    <X className=\"w-8 h-8 text-red-600 animate-in zoom-in duration-300 delay-100\" />\n                  )}\n                  <h3 className={`text-2xl font-bold animate-in slide-in-from-right duration-400 delay-200 ${lastAnswerCorrect ? 'text-green-600' : 'text-red-600'}`}>\n                    {lastAnswerCorrect ? '¡Correcto!' : '¡Incorrecto!'}\n                  </h3>\n                </div>\n                <p className={`text-lg animate-in fade-in duration-500 delay-300 ${lastAnswerCorrect ? 'text-green-700' : 'text-red-700'}`}>\n                  {lastAnswerCorrect \n                    ? 'Has seleccionado la respuesta correcta.' \n                    : 'La respuesta seleccionada no es correcta.'}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Question */}\n          {!showFeedback && (\n            <div className=\"mb-8 animate-in fade-in duration-400\">\n              <div className=\"flex items-center gap-2 mb-4 animate-in fade-in duration-300 delay-100\">\n                <span className=\"bg-red-500 text-white px-3 py-1 rounded text-sm font-semibold transform transition-all duration-300 hover:scale-105\">\n                  {currentQ.term}\n                </span>\n              </div>\n              <h2 className=\"text-xl font-semibold text-black mb-6 animate-in fade-in duration-400 delay-200\">\n                {currentQ.question}\n              </h2>\n\n              {/* Options */}\n              <div className=\"space-y-3\">\n                {currentQ.shuffledOptions.map((option, index) => {\n                  const isSelected = selectedAnswers[currentQuestion] === index\n                  \n                  return (\n                    <button\n                      key={index}\n                      onClick={() => handleAnswerSelect(index)}\n                      className={`w-full p-4 rounded-lg border-2 text-left transition-all duration-300 transform hover:scale-[1.02] hover:shadow-md animate-in fade-in duration-300 ${\n                        isSelected\n                          ? 'border-black bg-gray-50 scale-[1.02] shadow-md'\n                          : 'border-gray-300 bg-white hover:border-gray-400'\n                      }`}\n                      style={{ animationDelay: `${300 + index * 50}ms` }}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        {isSelected && (\n                          <div className=\"w-5 h-5 bg-black rounded-full flex-shrink-0 animate-in zoom-in duration-200\"></div>\n                        )}\n                        <span className=\"text-black transition-all duration-200\">{option}</span>\n                      </div>\n                    </button>\n                  )\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* Progress and Navigation */}\n          {!showFeedback && (\n            <div className=\"space-y-4 animate-in fade-in duration-400 delay-400\">\n              <div className=\"flex justify-between items-center text-sm text-gray-600 animate-in fade-in duration-300 delay-500\">\n                <span className=\"transition-all duration-300\">Pregunta {currentQuestion + 1} de {questions.length}</span>\n                <span className=\"transition-all duration-300\">{Math.round(progress)}%</span>\n              </div>\n              \n              <div className=\"animate-in fade-in duration-400 delay-600\">\n                <Progress value={progress} className=\"w-full transition-all duration-500\" />\n              </div>\n              \n              <div className=\"flex justify-between items-center animate-in fade-in duration-300 delay-700\">\n                <Button\n                  onClick={handlePrevious}\n                  disabled={currentQuestion === 0}\n                  variant=\"outline\"\n                  className=\"px-6 transition-all duration-300 hover:scale-105 disabled:hover:scale-100\"\n                >\n                  Anterior\n                </Button>\n                \n                <Button\n                  onClick={handleNext}\n                  disabled={selectedAnswers[currentQuestion] === undefined}\n                  className=\"bg-black text-white hover:bg-gray-800 px-8 transition-all duration-300 hover:scale-105 disabled:hover:scale-100\"\n                >\n                  {currentQuestion === questions.length - 1 ? 'Enviar' : 'Siguiente'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}